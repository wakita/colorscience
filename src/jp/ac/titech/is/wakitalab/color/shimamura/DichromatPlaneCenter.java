/* * 作成日： 2005/12/08 * * TODO この生成されたファイルのテンプレートを変更するには次を参照。 * ウィンドウ ＞ 設定 ＞ Java ＞ コード・スタイル ＞ コード・テンプレート */package jp.ac.titech.is.wakitalab.color.shimamura;/** * @author shinamu1 * * TODO この生成された型コメントのテンプレートを変更するには次を参照。 * ウィンドウ ＞ 設定 ＞ Java ＞ コード・スタイル ＞ コード・テンプレート */public class DichromatPlaneCenter {		/**	 * 第一色盲の色盲平面の中心	 *//*	public static final double[] PROLONG_CENTERLMS =		{0.19665064634868273,0.1548095613466536,0.05706524016066355};	public static final double[] PROSHORT_CENTERLMS =		{0.12485491023278006,0.11431414874756024,0.1144983520252318};	public static final double[] DEULONG_CENTERLMS =		{0.1722583764557046,0.1357525104540108,0.05100783949244046};	public static final double[] DEUSHORT_CENTERLMS = 		{0.13676321828125754,0.12287338860211025,0.11553593282827643};	public static final double[] TRILONG_CENTERLMS =		{0.11860631763386986,0.08711792550864998,0.053032903693710505};	public static final double[] TRISHORT_CENTERLMS =		{0.16560145899463619,0.15192433273527758,0.1090464986016515};	*/	public static final SRGBdash PROLONG_CENTERSRGBD =		new SRGBdash(0.9131626357277716,0.591975829286227,0.2825767204056443);	public static final SRGBdash PROSHORT_CENTERSRGBD =		new SRGBdash(0.36119065713505993,0.39821389638415605,0.6787102094556972);	public static final SRGBdash DEULONG_CENTERSRGBD =		new SRGBdash(0.7983154298153137,0.5183385895634153,0.254070584021011);	public static final SRGBdash DEUSHORT_CENTERSRGBD = 		new SRGBdash(0.4296323048957886,0.430851222929771,0.6805548495271276);	public static final SRGBdash TRILONG_CENTERSRGBD =		new SRGBdash(0.6996014584597626,0.28319990295721204,0.2941726031073029);	public static final SRGBdash TRISHORT_CENTERSRGBD =		new SRGBdash(0.417645433557439,0.587279720336281,0.6225545544267069);	public static void main(String[] args) {				//中心を求めるためのメソッド				SRGBdash srgb = new SRGBdash();		LMS lms = new LMS();		LMS dlms = new LMS();		LMS[][] centerLMS = new LMS[3][2];		int[][] count = new int[3][2];		boolean isLong;				//すべての色盲タイプ、すべての色について、色盲変換し、色盲平面の中心を求める。		for (int type=1;type<4;type++) {			centerLMS[type-1][0] = new LMS();			centerLMS[type-1][1] = new LMS();			count[type-1][0] = 0;			count[type-1][1] = 0;			for(int r=0;r<256;r++) {				for(int g=0;g<256;g++) {					for (int b=0;b<256;b++) {						//すべてのSRGB色について。						srgb.setValue(r/255.0, g/255.0, b/255.0);						srgb.getLMS(lms);						//色盲変換する。						isLong = Dichromat.choiceAnchor(lms, type);						Dichromat.convertPlane(lms, dlms, isLong, type);						//選択された色盲平面のカウントを増やし、合計座標にプラスする。						if(isLong) {							for(int i=0;i<3;i++)								centerLMS[type-1][0].setValue(i,										centerLMS[type-1][0].getValue(i) + dlms.getValue(i));							count[type-1][0]++;						} else {							for(int i=0;i<3;i++)								centerLMS[type-1][1].setValue(i,										centerLMS[type-1][1].getValue(i) + dlms.getValue(i));							count[type-1][1]++;						}					}				}			}			for(int i=0;i<3;i++) {				centerLMS[type-1][0].setValue(i,						centerLMS[type-1][0].getValue(i) / count[type-1][0]);				centerLMS[type-1][1].setValue(i,						centerLMS[type-1][1].getValue(i) / count[type-1][1]);			}			System.out.println(Dichromat.typeString(type)+": long ="+count[type-1][0]);			System.out.println("  centerLMS="+centerLMS[type-1][0]);			System.out.println(" centerSRGB="+centerLMS[type-1][0].getXYZ().getSRGBdash());			System.out.println(Dichromat.typeString(type)+": short="+count[type-1][1]);			System.out.println("  centerLMS="+centerLMS[type-1][1]);			System.out.println(" centerSRGB="+centerLMS[type-1][1].getXYZ().getSRGBdash());		}	}}