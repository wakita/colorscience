package jp.ac.titech.is.wakitalab.color.shimamura;import java.io.*;import java.net.*;public class Bitmap{	private URL file_url;	private InputStream is;	private int img_w;	private int img_h;	private int color_bit;	private int data[];	private int cult[];	private int pixels[][];	private int rr;	private int gg;	private int bb;	boolean flag_const = false;	public Bitmap(String fullpath) {		try {			flag_const = true;			is = new FileInputStream(fullpath);		} catch (Exception e) {			System.out.println("Exception: " + e);		}		readBitmap();	}		public Bitmap(URL url,String str) {		try{			//file open			file_url = new URL(url,str);			is = file_url.openStream();		} catch (Exception e) {			System.out.println("Exception: " + e);		}		readBitmap();	}			private void readBitmap() {		try{			is.skip(14 + 4);				// get image width size			img_w =  is.read()        | 				(is.read() << 8)  |				(is.read() << 16) |				(is.read() << 24);			// get image height size			img_h =  is.read()        | 				(is.read() << 8)  |				(is.read() << 16) |				(is.read() << 24);				is.skip(2);				// get Color bit type			color_bit =  is.read()        | 			      	    (is.read() << 8);				is.skip(24);				//get 8bit BMP cult			if(color_bit == 8){				cult = new int[256];				for(int i = 0;i < 256;i++){					bb = is.read();					gg = is.read();					rr = is.read();					is.read();					cult[i] = (0xFF000000) |						  (rr << 16)   |						  (gg << 8)    |						  (bb << 0);				}			}				//get image data			data = new int[img_w * img_h];			int byte_w = img_w * (color_bit / 8);			int padding = ((byte_w + 3) / 4 * 4) - byte_w;				if(color_bit == 8){				for(int y = img_h -1;y >= 0;y--){					for(int x = 0;x < img_w;x++){						data[img_w * y + x] = cult[is.read()]; 						}						for(int cnt = 0;cnt < padding;cnt++){						is.read();					}				}				} else {					for(int y = img_h -1;y >= 0;y--){					for(int x = 0;x < img_w;x++){						bb = is.read();						gg = is.read();						rr = is.read();						data[img_w * y + x] = (0xFF000000) |								      (rr << 16)   |					  			      (gg <<  8)   |					  			      (bb <<  0);					}					for(int cnt = 0;cnt < padding;cnt++){						is.read();					}				}			}				//file close			is.close();					pixels = new int[img_h][img_w];			for (int i=0;i<img_h;i++) {				for (int j=0;j<img_w;j++) {					pixels[i][j] = data[i*img_w+j];				}			}				} catch(IOException e) {			System.out.println(e);		}	}	public int getWidth() { return img_w; }	public int getHeight(){ return img_h; }	public int[] getBMPSource() { return data; }		public int[][] getBMPSource2() { return pixels; }	}