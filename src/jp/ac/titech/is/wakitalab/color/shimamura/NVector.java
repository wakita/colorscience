/* * 作成日： 2004/10/29 */package jp.ac.titech.is.wakitalab.color.shimamura;/** * @author shinamu1 */public class NVector {	static double[] plusV(double[] v1, double[] v2) {		double[] answer = new double[v1.length];		plusV(v1, v2, answer);		return answer;	}	static void plusV(double[] v1, double[] v2, double[] answer) {		assert v1.length == v2.length && v1.length == answer.length;		for (int i=0;i<v1.length;i++) answer[i] = v1[i] + v2[i];	}	static void minusV(double[] v1, double[] v2) {		double[] answer = new double[v1.length];		minusV(v1, v2, answer);	}	static void minusV(double[] v1, double[] v2, double[] answer) {		assert v1.length == v2.length && v1.length == answer.length;		for (int i=0;i<v1.length;i++) answer[i] = v1[i] - v2[i];	}	static double VTmultiV(double[] v1, double[] v2) {		assert v1.length == v2.length;		double answer = 0.0;		for (int i=0;i<v1.length;i++) answer += v1[i]*v2[i];		return answer;	}	static double[][] VmultiVT(double[] v1, double[] v2) {		double[][] answer = new double[v1.length][v1.length];		VmultiVT(v1, v2, answer);		return answer;	}	static void VmultiVT(double[] v1, double[] v2, double[][] answer) {		assert v1.length == v2.length && v1.length == answer.length;		for (int i=0;i<v1.length;i++) {			for (int j=0;j<v1.length;j++) answer[i][j] = v1[i] * v2[j];		}	}	static double[] VTmultiM(double[] v1, double[][] m1) {		double[] answer = new double[v1.length];		VTmultiM(v1, m1, answer);		return answer;	}	static void VTmultiM(double[] v1, double[][] m1, double[] answer) {		assert v1.length == m1.length && v1.length == answer.length;		double tmp = 0.0;		for (int i=0;i<v1.length;i++) {			for (int j=0;j<v1.length;j++) tmp += v1[j] * m1[j][i];			answer[i] = tmp;			tmp = 0.0;		}	}}