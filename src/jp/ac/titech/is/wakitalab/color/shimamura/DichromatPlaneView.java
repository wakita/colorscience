
/* * 作成日： 2005/12/20 */package jp.ac.titech.is.wakitalab.color.shimamura;import javax.swing.*;import java.awt.*;import java.awt.event.*;/** * 色盲平面の座標と色の関係を確認するクラス * @author shinamu1 */public class DichromatPlaneView {	public static void main(String[] args) {		JFrame frame = new JFrame("Dichromat View");		frame.getContentPane().setLayout(new GridLayout(2,2));		int w = 600, h = 400;		int wh = w*h;		for (int type = 1; type<4; type++){			BitmapCanvas canvas = new BitmapCanvas();			int[][] pixel = new int[w][h];			int[] pix = new int[wh];			LMS lms = new LMS();			SRGB srgb = new SRGB();			for (int i=0;i<w;i++) {				for (int j=0;j<h;j++) {					double[] param = {i * 0.001, j * 0.001};					int l =0;					for (int k=0;k<3;k++)						if(k!=type-1)							lms.setValue(k, param[l++]);					boolean over = Dichromat.boundaryInConvertNewtonLMS(lms, type);					if(over) {						if(i%100==0 || j%100==0)							srgb.setValue(1.0,0,0);						else							srgb.setInt(0);					}					else						lms.getSRGB(srgb);					pixel[i][j] = srgb.getInt();				}			}			for (int i=0;i<wh;i++)				pix[i] = pixel[i%w][(h-1)-i/w];			canvas.setImage(w, h, pix);			frame.getContentPane().add(canvas);		}		frame.setSize(w*2+20, h*2+30);		frame.setVisible(true);		frame.addWindowListener(new WindowAdapter(){			public void windowClosing(WindowEvent e){				System.exit(0);			}		});	}}
